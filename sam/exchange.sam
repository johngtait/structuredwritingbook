sam:

chapter: The Exchange Algorithm

    One of the earliest motivations for structured writing was portability. This was in the days when there were many different computing platforms all using different data formats. Moving a document written on one platform to another platform while retaining any kind of formatting or structure was a major challenge. 
    
    To enable the algorithm of porting a document from one system to another, structured writing techniques were used to move the representation of the document away from a series of embedded typesetting codes towards more abstract structures to which style information could be attached. The interpretation of this structure and style information into platform-specific typesetting codes or screen display instructions could now be done separately on each platform. 
    
    System portability is now much easier because the number of platforms has decreased and much of the low level representation of data has been standardized (thought ASCII and UniCode, for instance). Major applications, or compatible equivalents, now run on all major platforms. The reason they can do this is because the files are structured to factor out specific display instructions for different platforms: structured writing at work.
    
    Portability remains a concern, however, but now it has more to do with portability between organizations. How does one organization send content to another organization in a format that it can accept and use? 
    
    The problem here is how exactly the receiving organization wants to use the content. Making content exchangeable is not difficult in itself. The most common formats for exchange between organizations are PDF, HTML, and Microsoft Word. PDF has viewers for every platform. Every platform has browsers that can read HTML. Word files can be read by a variety of applications on virtually every platform while retaining all or most of their source formatting. 
    
    If what the receiving organization wants to do is print and read the content, the PDF format fits the bill. If they want to be able to edit it while making minor modifications to formatting, Word or does the job. If they want to edit it an put it on an internal or external Web server, HTML is fine. 
    
    But if the receiving organization want to take the received content, manipulate it, query it, reorganize it, and include it in their own publication system, these format are not really flexible enough to meet the need. Or at least, it will involve a lot of human execution of algorithms because there is not enough structure in the content to hand the job over to machines. This may be find for occasional or ad hoc transfers, but for large or regular exchanges of content it can become inefficient and error prone. 
    
    A commonly suggested approach is to exchange content in a common or standardized document domain format. Some common formats suggested are DocBook and DITA. But this is not as easy as it sounds. DocBook and DITA are both large and complex formats that different organizations may use in different ways. Different organizations may specialize either format, and while specialized version should still be formally compatible, they may not process as intended in the recipient's system, especially if one organization has chosen to interpret the standard in different ways -- or to violate it in order to achieve a specific business goal. It is impossible for a standard to express all the constraints that individual businesses or individual writers want to use, so standards are inevitable used in non-standard ways that compromise portability.
    
    Then there is the consideration that portability is only one of the algorithms an organization may want to use. You need structures to support all of your algorithms, so choosing a complex standard format just to enable portability is not a great strategy, especially if that standard does not really make the content as portable as it claims. 
    
    Finally, there is the consideration that exchange via standard formats only works when their use is very widely distributed. Otherwise most of the organizations you want to exchange content with won't create content or accept content in the same format you are using. Word format qualifies, as does plain text and arguable HTML. But no document domain or subject domain markup language is anywhere close to being adopted that widely. 
    
    This is not to say that you cannot use one of these standardized languages to exchange content with a particular set of partners, as long as you all agree before hand on exactly how you are going to use them. In other words, you will need to agree on an additional set of constraints beyond those provided by the standard format, and figure out how to enforce and validate them. 
    
    Of course, the best way to enforce and validate content constraints is with a structured writing format that either enforces them or (ideally) factors them out. 
    
    Portability, then, does not lie so much in having the same format as everyone else, as it does in being able to deliver content in whatever format your customer wants to receive it. And, of course, in having a supplier that will can deliver content in whatever format you want to receive it in. 
    
    We have seen that moving content from the media domain to the document domain helps you deliver the same content to different media or to format it differently. We have also seen that moving your content to the subject domain makes it easier to create different forms of document organization and behavior. The same is true for exchange. An exchange format, in the end, is just another output. The ability to create multiple exchange formats comes from exactly the same techniques that let you create different document designs and output formats.  
    
    Portability is often advanced as a principal argument against developing your own structured writing structures. But in fact portability is often best served by custom formats that enforce or factor out the constraints you need to port content reliably to other organizations. 
        
    
