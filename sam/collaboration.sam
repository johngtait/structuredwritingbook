chapter:(#chapter.collaboration) Collaboration

    One of the more common reasons for introducing content management and/or structured writing to an organization is to improve collaboration. It is certainly not the only way to facilitate collaboration. In fact, the more common approach is to create dead simple and largely unstructured tools such as message boards and wikis. One of the most widely collaborative projects in the world -- Wikipedia -- runs on a wiki using a fairly simple document domain markup language which is often hidden behind a simple WYSIWYG editor. 
    
    Why then might one turn to a more complex structured writing system for collaboration. In a word: integration. The kind of collaboration that is supported by message boards and wikis is one in which collaboration chiefly means everybody being able to see what everyone else is doing. Any connections between the pieces created by different people are loose and non-critical, mostly taking the form of hypertext links. And such connections are there are are manged by large scale community efforts. Wikipedia is full of links beteen articles largely because anyone can go in an edit an article to add a link to an article on a related subject. 
    
    But not all collaboration can rely on such loose and uncoordinated activity. In many cases you need to bring the pieces created by collaborators together to form an integrated and cohesive whole. You can do that by hand, of course, but that can be cumbersome and time consuming. It may be hard for any one coordinator to keep up with all the content that is being created, especially if new content is continually being written, without any freeze period to allow the integration to take place.
    
    Equally important, the collaborators on a message board or a lager wiki like Wikipedia are largely ignorant of each other and each others activity. Duplication of effort and even outright contradiction may be frequent. If you have huge amounts of volunteers constantly reading the site and finding duplication and contradiction, as Wikipedia does, you can live with this (though there will always be parts of the system that are in error at any give time). But an organization that is paying its writers and editors may not be able to afford this slow and effort-intensive approach. It may need a way to coordinate the activity of its collaborators to avoid duplication and error. 
    
    section: Bridging silos
    
        There is a lot of talk in content management circles about breaking down content silos. The naive way to do this it to have everyone use a single system and a single markup language. But as we have seen, this means either adopting a simple document domain language that everyone can learn, like Markdown, which does not have enough structures to meet everyone's needs, or adopting a large complex document domain language like DITA or DocBook that meets a lot of needs but has poor functional lucidity, especially for part-time contributors. 

        The most pernicious myth about collaboration is that it requires everyone to use the same tools and to understand each other's work. In fact, this is the worst way to collaborate, because it create a huge amount of overhead which can swamp the ability to actually get anything done. Efficient collaboration is actually achieve by limiting the amount that collaborators have to know about each others work and each others tools. This allows each group or individual to work efficiently while still creating a product that can be integrated successfully with the work of other. 
        
        This approach to collaboration is seen through the worlds of engineering and computer programming. The secret ingredient that allows workers to collaborate with minimal knowledge of each other's work is the interface. 
    
    section: Expanding your pool of authors
    
        It is often desirable to bring other authors into the fold. However, as soon as you get outside your pool of professional authors, the ability to teach them to do complex publishing or content management tasks is greatly reduced.

        Groups who want to involve software developers in the authoring of documentation, for instance, often turn to simple document domain markup languages such as MarkDown of WikiMarkup (using a Wiki as a collaboration platform). 

        Functional lucidity is the key to expanding your pool of authors.         