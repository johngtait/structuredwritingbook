chapter: Markup SAM


    SAM (Semantics Authoring Markdown) is a {hybrid markup language}(concept) that I created because I got frustrated writing in XML and because I want to write in the subject domain and all the other {concrete markup languages}(concept) and {hybrid markup languages}(concept) I can find are principally or wholly document domain languages. Also, I don't know of any hybrid languages that are {constrainable}(concept "constraints"), and I wanted a hybrid language that is constrainable. (Again, because I want to work in the subject domain where constraints are particularly important.) This book is written in SAM.
    
    SAM is the language used for the majority of the examples in this book. I have not explained it fully until now because SAM is designed to make structure clear and that is all I have needed to do in most examples. Naturally, to write in SAM you would need to know more about the rules, but you should be able to read a typical SAM document and understand its structure with little or no instruction. 
    
    This is similar, but not identical, to the aim of mainstream concrete and hybrid languages such as {Markdown}(language) and {Restructured Text}(language), which is to have the source file be readable as a document. In other words, they strive to make the document structure clear from the markup. They are document domain languages, and they strive to make sure the the markup expresses the document structure they create in a way that is readable.
    
    SAM has the same goal, except that SAM was designed for creating subject domain languages. As such, it is designed to make the subject domain structure of the document clear to the reader. A SAM document may not look as much like a finished document as a {Markdown}(language) or {reST}(language) document. For example, it does not use underlines to visually denote different levels of header. Instead, it focuses on creating a hierarchy of named blocks and fields. In many ways it is similar to a markup language called {YAML}(language), which is designed for data rather than documents.
    
    Here is an example of YAML courtesy of Wikipedia:[https://en.wikipedia.org/wiki/YAML#Sample_document]
    
    ```(YAML)
        receipt:     Oz-Ware Purchase Invoice
        date:        2012-08-06
        customer:
            first_name:   Dorothy
            family_name:  Gale

        items:
            - part_no:   A4786
              descrip:   Water Bucket (Filled)
              price:     1.47
              quantity:  4

            - part_no:   E1628
              descrip:   High Heeled "Ruby" Slippers
              size:      8
              price:     133.7
              quantity:  1

        bill-to:  &id001
            street: |
                    123 Tornado Alley
                    Suite 16
            city:   East Centerville
            state:  KS

        ship-to:  *id001

        specialDelivery:  >
            Follow the Yellow Brick
            Road to the Emerald City.
            Pay no attention to the
            man behind the curtain.

    
    Key features of YAML are the use of names ending in colons to introduce blocks, and the use of indentation to indicate the hierarchy of the document. SAM uses the same principles.
    
    ```(SAM)
        examples: Basic SAM structures

            example: Paragraphs
                The is a sample paragraph. It is inside
                the {block}(structure) called `example`.
                It contains two {annotations}(structure),
                including this one. It ends with a blank
                line.

                This is another paragraph.

            example: Lists

                Then there is a list:

                1. First item.
                2. Second item.
                3. Third item.

            example: Block quote

                Next is a block quote with a {citation}(structure).

                """[Mother Goose]
                    Humpty Dumpty sat on a wall.

    
    