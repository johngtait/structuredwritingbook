<?xml version="1.0" encoding="UTF-8"?>
<chapter>
<title>Algorithms: Information Architecture</title>
<annotations>
<p>Concepts</p>
<p><phrase><annotation type="concept">subject domain</annotation></phrase> <phrase><annotation type="concept">media domain</annotation></phrase> <phrase><annotation type="concept">document domain</annotation></phrase> <phrase><annotation type="concept">management domain</annotation></phrase> <phrase><annotation type="concept">subject-domain</annotation></phrase> <phrase><annotation type="concept">media-domain</annotation></phrase> <phrase><annotation type="concept">document-domain</annotation></phrase> <phrase><annotation type="concept">management-domain</annotation></phrase> <phrase><annotation type="concept">hybrid tagging language</annotation></phrase></p>
<p>Languages</p>
<p><phrase><annotation type="language">SAM</annotation></phrase> <phrase><annotation type="language">DITA</annotation></phrase> <phrase><annotation type="language">DocBook</annotation></phrase> <phrase><annotation type="language">Markdown</annotation></phrase> <phrase><annotation type="language">HTML</annotation></phrase></p>
<p>Algorithms</p>
<p><phrase><annotation type="algorithm">publishing algorithm</annotation></phrase> <phrase><annotation type="algorithm">publishing</annotation></phrase> <phrase><annotation type="algorithm">synthesis algorithm</annotation></phrase> <phrase><annotation type="algorithm">synthesis</annotation></phrase> <phrase><annotation type="algorithm">presentation algorithm</annotation></phrase> <phrase><annotation type="algorithm">presentation</annotation></phrase> <phrase><annotation type="algorithm">formatting algorithm</annotation></phrase> <phrase><annotation type="algorithm">formatting</annotation></phrase> <phrase><annotation type="algorithm">encoding algorithm</annotation></phrase> <phrase><annotation type="algorithm">encoding</annotation></phrase> <phrase><annotation type="algorithm">composition algorithm</annotation></phrase> <phrase><annotation type="algorithm">composition</annotation></phrase> <phrase><annotation type="algorithm" specifically="composition">composability</annotation></phrase> <phrase><annotation type="algorithm">conformance</annotation></phrase> <phrase><annotation type="algorithm">conformance algorithm</annotation></phrase> <phrase><annotation type="algorithm">separating content from formatting</annotation></phrase> <phrase><annotation type="algorithm">single sourcing</annotation></phrase> <phrase><annotation type="algorithm">single sourcing algorithm</annotation></phrase> <phrase><annotation type="algorithm">differential single sourcing</annotation></phrase> <phrase><annotation type="algorithm">differential single sourcing algorithm</annotation></phrase> <phrase><annotation type="algorithm">single source of truth</annotation></phrase> <phrase><annotation type="algorithm">single source of truth algorithm</annotation></phrase> <phrase><annotation type="algorithm">reuse</annotation></phrase> <phrase><annotation type="algorithm">content reuse</annotation></phrase> <phrase><annotation type="algorithm">content reuse algorithm</annotation></phrase> <phrase><annotation type="algorithm">reuse algorithm</annotation></phrase> <phrase><annotation type="algorithm">content management algorithm</annotation></phrase> <phrase><annotation type="algorithm">content management</annotation></phrase> <phrase><annotation type="algorithm">linking</annotation></phrase> <phrase><annotation type="algorithm">linking algorithm</annotation></phrase></p>
</annotations>
<p>Information architecture is the arrangement of content so that it can be found and navigated. We have always had information architecture. The term is new, but not the need or the concept. In the past, though, information architecture was divided into two pieces. The basic unit of information was the book and the “architecture” of the book was an integral part of the responsibility of the author and editor. Larger sets of information were created by collecting and organizing books and that was the responsibility of the librarian or bookseller. (Libraries and book stores have different information architectures to serve different purposes.)</p>
<p>With the advent of online media, first in the form of large capacity electronic media such as CD-ROMs and then the Internet and the Web, this division of architectural responsibilities was overthrown. The basic unit of information in electronic media is not the book but the page. Thanks to hypertext linking, the relationships between pages in electronic media much more complex than on paper. Furthermore, a web page can link across the entire Web, meaning it can express far more complex relationships than a typical book page. (Books can cite other books, but not provide an active link to them.) Also, the architecture of online media has to account for the ability to add, modify, and delete individual bits of content at any time. It is possible to think of book or library architectures in largely static terms. It is a serious mistake to think of Web architectures in this way.</p>
<p>This leads to the development of architectures of much smaller units with much more complex relationships to a much larger and more diverse set of resources. Additionally, the rate of change in these media is much faster, with pages being added and removed all the time. Finally, these architectures include not only text and static graphics but dynamic media: videos, animation, and dynamic feeds and information widgets. Given these factors, the old separation of roles between writer and librarian no longer works.</p>
<p>Authors have to be much more conscious of how their pages interact with other pages in the collection, including those created by others. The scale at which these small pieces of content relate with each other is much much greater than the scale at which the pieces of a book related to each other. This calls for a whole new approach to information architecture, and for the appearance of a function and a role that had no equivalent in the paper world. Thus the term information architecture was born, not to name something entirely new, but something transformed by our new technology.</p>
<p>Information architecture as a discipline in its own right, as opposed to being an aspect of authorship or librarianship, has arisen to combat the chaos that emerged in many websites as they began to grow, lacking an overall organizing principle or influence. But we should recognize that information architecture is as much part of the book world as it is part of the web world, even if it was  not traditionally a job title in the book world. And if you are producing both web-like content and book-like content, your information architecture has to comprehend both.</p>
<p>Because information architecture involves the organization of large bodies of content it can benefit greatly from structured writing techniques. Any structured writing system need to have an architecture algorithm to implement the various aspects of content organization.</p>
<p>As we have seen, the first part of a structured writing algorithm is the creation of structures that support a function, and the second part is writing the code that implements the function based on those structures. What structures and algorithms support information architecture in structured writing?</p>
<p>I’m going to start with making a basic distinction between two types of information architecture: <phrase><annotation type="concept" specifically="top-down information architecture">top-down</annotation></phrase> and <phrase><annotation type="concept" specifically="top-down information architecture">bottom-up</annotation></phrase>. Top down information architecture deals with navigational aids and organizing systems that stand apart from the content and point to it. A table of contents is a piece of top-down information architecture. Bottom-up information architecture deals with navigation and organization that exists within the content itself. A web site with a consistent approach to hypertext links within it pages is an example of a bottom-up information architecture.</p>
<p>Bottom-up and top-down information architectures are not incompatible with each other. In fact almost every information architecture has both top-down and bottom-up elements. (Books, for instance, which are typically top-down, based on a table of contents, may also have internal cross references, which are a bottom up mechanism.)</p>
<p>Structured writing can be used to drive both the <phrase><annotation type="concept" specifically="top-down information architecture">top-down</annotation></phrase> and <phrase><annotation type="concept" specifically="top-down information architecture">bottom-up</annotation></phrase> aspects of information architecture.</p>
<section>
<title>Categorization</title>
<p>One of the key elements of top-down information architecture is categorization. And information architect develops categories of content and develops and organizational schema (such as a table of contents) based on those categories. This may include levels of subcategories forming a hierarchical categorization scheme.</p>
<p>Categorization may be implemented as part of the <phrase><annotation type="algorithm">content management algorithm</annotation></phrase>, with categories implemented as part of the external metadata that a CMS applies to a content object. This is common practice when dealing with content in the <phrase><annotation type="concept">media domain</annotation></phrase> or the <phrase><annotation type="concept">document domain</annotation></phrase>.</p>
<p>For content in the <phrase><annotation type="concept">subject domain</annotation></phrase>, however, it is possible that the metadata required to assign a piece of content to a category is already inherent in its subject domain markup. This could be a consequence of the categorization scheme being built into the subject domain markup design from the beginning (if the categorization scheme is based on subjects). But as so often with the subject domain, it may turn out that membership in a category can be calculated based on existing subject domain metadata even if the two schemas are not the same. Quite simply, categorization schemes are based on some aspect of reality, and if that corresponds to the aspects of reality captured by the subject domain markup of a piece of content, then categorization can be done algorithmically.</p>
<p>This can be a tremendous advantage, because it makes submission of content to a repository so much easier for authors. But it can also avoid the need for a costly CMS altogether, since it allows the publishing algorithm to categorize content at build time without the need of a separate metadata store or a separate system to manage categorization.</p>
</section>
<section>
<title>Linking</title>
<p>We have covered the <phrase><annotation type="algorithm">linking algorithm</annotation></phrase> already, but linking is at the heart of a bottom up information architecture. In a bottom-up architecture, a page is not simply a leaf on a tree: the price you find at the end of the search. It is a junction point in the exploration of an information space and the quest to understand a subject. In reading a page, a reader may discover new subjects that they need to understand and new options that they need to consider. They may discover that what they thought the knew is wrong, or what they thought they wanted to do was not the right choice. They may find that their search or their traversal of the categorization system has led them to the wrong place, or they may discover whole new worlds they wish to explore. At a more mundane level, they may discover that they need additional information to complete their task, such as reference data.</p>
<p>These are all pointers to some next topic that the reader needs. Even the most prescient writer cannot have chosen all of them as the linear next topic in a linear narrative. To serve the reader they need to pave all of these possible paths for them, and the way you do that is with hypertext links.</p>
<p>As we saw in <citation type="nameref" value="linking"/>, you can generate links from subject domain annotations. But a bottom up architecture is about more than simply generating links. It is about a systematic plan for generating the right kind of links to create the relationships appropriate to the content set.</p>
</section>
<section>Tables of Contents</section>
</chapter>
