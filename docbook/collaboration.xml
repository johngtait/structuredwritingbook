<?xml version="1.0"?>
<db:chapter xmlns:db="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:strings="http://exslt.org/strings" version="5.0" xml:id="chapter.collaboration">
<db:title>Collaboration</db:title>
<db:para>One of the main reasons for introducing content management and/or structured writing to an organization is to improve collaboration.</db:para>
<db:section>
<db:title>Bridging silos</db:title>
<db:para>There is a lot of talk in content management circles about breaking down content silos. The naive way to do this it to have everyone use a single system and a single markup language. But as we have seen, this means either adopting a simple document domain language that everyone can learn, like Markdown, which does not have enough structures to meet everyone’s needs, or adopting a large complex document domain language like DITA or DocBook that meets a lot of needs but has poor functional lucidity, especially for part-time contributors.</db:para>
<db:para>The most pernicious myth about collaboration is that it requires everyone to use the same tools and to understand each other’s work. In fact, this is the worst way to collaborate, because it create a huge amount of overhead which can swamp the ability to actually get anything done. Efficient collaboration is actually achieve by limiting the amount that collaborators have to know about each others work and each others tools. This allows each group or individual to work efficiently while still creating a product that can be integrated successfully with the work of other.</db:para>
<db:para>This approach to collaboration is seen through the worlds of engineering and computer programming. The secret ingredient that allows workers to collaborate with minimal knowledge of each other’s work is the interface.</db:para>
</db:section>
<db:section>
<db:title>Expanding your pool of authors</db:title>
<db:para>It is often desirable to bring other authors into the fold. However, as soon as you get outside your pool of professional authors, the ability to teach them to do complex publishing or content management tasks is greatly reduced.</db:para>
<db:para>Groups who want to involve software developers in the authoring of documentation, for instance, often turn to simple document domain markup languages such as MarkDown of WikiMarkup (using a Wiki as a collaboration platform).</db:para>
<db:para>Functional lucidity is the key to expanding your pool of authors.</db:para>
</db:section>
</db:chapter>
