<?xml version="1.0"?>
<db:chapter xmlns:db="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:strings="http://exslt.org/strings" version="5.0" xml:id="chapter.repeatability">
<db:title>Repeatability</db:title>


<db:para>Content is one of the hardest products to test. One of the biggest barriers to consistently producing quality content is being able to test that quality has actually been achieved -- that is, that the content is serving and/or influencing the reader as you want it to do. The problem, quite simply, is that it is hard to observe the effect of content. What you can’t observe, you can’t measure, and what you can’t measure, you can’t manage.</db:para>
<db:para>A second problem is that even when you do get to observe the effect of content on the reader, how do you know what aspects of the content achieved the created the effect you observed. Making these observations on individual pieces of content is of limited value. Yes, you can do continual A/B testing, taking down content that does not perform well and continually trying other things until you finally create a piece of content that performs well. But then how do you reproduce that success with the next piece of content you write. How do you determine which aspects of the successful content contributed to its success and should be emulated in future content?</db:para>
<db:para>The fact is that when you ask this question about a single piece of successful content your answer is little more than an educated guess. You are abstracting from a single data point. To be certain which aspects of the content are doing the most to achieve it aims, you need to observe multiple samples that exhibit the same basic features. It is when you observe that multiple pieces of content exhibiting the same features are all successful that you know with some degree of reliability that it is those features that make the content work. Once you know this, you are in a position to reliably produce new content that will be similarly successful. You have achieved repeatability.</db:para>
<db:para>To achieve repeatability, you need structured writing. More specifically, you need structured writing that is focused on content quality. In order to generalize the measurements you are taking, so that you can draw conclusions that apply to more than one piece of content, you need to make sure that each piece of content you are measuring has the same structures and features. That is the only way you can measure if it is the structures and features, rather than the individual texts, that are performing well. You need consistent conformant content structures that express those features of a text that impact is quality. Until you have that, you have no reliable basis on which to extrapolate any measurements you do of individual pieces of content.</db:para>
<db:para>Once you have confirmed that these structures contribute to content quality, you need to insist on them in all the new content you create in order to ensure that it conforms to the constraints and structures you have established through testing. In order to achieve repeatability in content creation, therefore, you need structured writing.</db:para>
<db:para>The most fundamental part of content quality is to give the reader the information they need in a form they can use. A confounding aspect of content quality is that every reader is different. They are doing different thing, they have different experiences, and they have different vocabularies.</db:para>
<!--  ref to information architecture -->
<db:para>For many writers in corporate environments, lack of knowledge about the readers, their tasks, and their backgrounds, is one of the biggest problems in determining what content is required and what form it should take. While direct contact with the customer is undoubtedly the best way to address this, you can actually learn what content to create and how without every meeting the reader, as long as you can measure the performance of your content, generalize your results, and repeat the structures that perform best.</db:para>
</db:chapter>
